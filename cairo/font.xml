<mod name='font'>
  <struct name='Options' opaque='true' prefix='cairo_font_options_'>
    <constructor name='create' foreign='cairo_font_options_create'/>

    <method name='status'>
      <result type='cairo::Status'/>
    </method>

    <method name='merge'>
      <arg name='other' type='cairo::font::Options'/>
    </method>

    <method name='hash'>
      <result type='c:ulong'/>
    </method>

    <method name='equal'>
      <arg name='other' type='cairo::font::Options'/>
      <result type='cairo:bool'/>
    </method>

    <method name='set_antialias'>
      <arg name='antialias' type='cairo::Antialias'/>
    </method>

    <method name='get_antialias'>
      <result type='cairo::Antialias'/>
    </method>

    <method name='set_subpixel_order'>
      <arg name='subpixel_order' type='cairo::font::SubpixelOrder'/>
    </method>

    <method name='get_subpixel_order'>
      <result type='cairo::font::SubpixelOrder'/>
    </method>

    <method name='set_hint_style'>
      <arg name='hint_style' type='cairo::font::HintStyle'/>
    </method>

    <method name='get_hint_style'>
      <result type='cairo::font::HintStyle'/>
    </method>

    <method name='set_hint_metrics'>
      <arg name='hint_metrics' type='cairo::font::HintMetrics'/>
    </method>

    <method name='get_hint_metrics'>
      <result type='cairo::font::HintMetrics'/>
    </method>

    <implementation trait='std::clone::Clone'>
      <method name='clone' foreign='cairo_font_options_copy' immutable='true'>
        <result type='cairo::font::Options'/>
      </method>
    </implementation>

    <!-- TODO: Trait removed from std
    <implementation trait='std::clone::DeepClone'>
      <method name='deep_clone' foreign='cairo_font_options_copy' extern='false' immutable='true'>
        <result type='cairo::font::Options'/>
      </method>
    </implementation>
    -->

    <implementation trait='std::ops::Drop'>
      <method name='drop' foreign='cairo_font_options_destroy'/>
    </implementation>
  </struct>

  <struct name='FontFace' opaque='true' prefix='cairo_font_face_'>
    <!-- Toy -->
    <constructor name='create_toy' foreign='cairo_toy_font_face_create'>
      <arg name='family' type='c:string' immutable='true'/>
      <arg name='slant' type='cairo::font::Slant'/>
      <arg name='weight' type='cairo::font::Weight'/>
    </constructor>

    <!-- TODO: cstring result
    <method name='toy_get_family' foreign='cairo_toy_font_face_get_family'>
      <result type='c:string'/>
    </method>
    -->

    <method name='toy_get_slant' foreign='cairo_toy_font_face_get_slant'>
      <result type='cairo::font::Slant'/>
    </method>

    <method name='toy_get_weight' foreign='cairo_toy_font_face_get_weight'>
      <result type='cairo::font::Slant'/>
    </method>

    <!-- Generic -->
    <method name='status'>
      <result type='cairo::Status'/>
    </method>

    <method name='get_type'>
      <result type='cairo::font::FontType'/>
    </method>

    <method name='get_reference_count'>
      <result type='c:uint'/>
    </method>

    <!-- TODO: cairo_font_face_set_user_data -->
    <!-- TODO: cairo_font_face_get_user_data -->

    <implementation trait='std::clone::Clone'>
      <method name='clone' foreign='cairo_font_face_reference' immutable='true'>
        <result type='cairo::font::FontFace'/>
      </method>
    </implementation>

    <implementation trait='std::ops::Drop'>
      <method name='drop' foreign='cairo_font_face_destroy'/>
    </implementation>
  </struct>

  <struct name='ScaledFont' opaque='true' prefix='cairo_scaled_font_'>
    <constructor name='create' foreign='cairo_scaled_font_create'>
      <arg name='font_face' type='cairo::font::FontFace'/>
      <arg name='font_matrix' type='cairo::matrix::Matrix' immutable='true'/>
      <arg name='ctm' type='cairo::matrix::Matrix' immutable='true'/>
      <arg name='options' type='cairo::font::Options'/>
    </constructor>
    
    <method name='status'>
      <result type='cairo::Status'/>
    </method>

    <method name='extents'>
      <out name='extents' type='cairo::font::FontExtents'/>
    </method>

    <method name='text_extents'>
      <arg name='utf8' type='c:string' immutable='true'/>
      <out name='extents' type='cairo::font::TextExtents'/>
    </method>

    <method name='glyph_extents'>
      <arg name='glyphs' type='rsi:vec' element='cairo::font::Glyph' immutable='true'/>
      <arg name='glyphs' type='rsi:vec-length' element='c:int'/>
      <out name='extents' type='cairo::font::TextExtents'/>
    </method>

    <!-- TODO: cairo_scaled_font_text_to_glyphs -->

    <method name='get_font_face'>
      <result name='extents' type='cairo::font::FontFace'/>
    </method>

    <method name='get_font_options'>
      <arg name='options' type='cairo::font::FontExtents'/>
    </method>

    <method name='get_font_matrix'>
      <out name='font_matrix' type='cairo::matrix::Matrix'/>
    </method>

    <method name='get_ctm'>
      <out name='ctm' type='cairo::matrix::Matrix'/>
    </method>

    <method name='get_scale_matrix'>
      <out name='scale_matrix' type='cairo::matrix::Matrix'/>
    </method>

    <method name='get_type'>
      <result type='cairo::font::FontType'/>
    </method>

    <method name='get_reference_count'>
      <result type='c:uint'/>
    </method>

    <!-- TODO: cairo_scaled_font_set_user_data -->
    <!-- TODO: cairo_scaled_font_get_user_data -->

    <implementation trait='std::clone::Clone'>
      <method name='clone' foreign='cairo_scaled_font_reference' immutable='true'>
        <result type='cairo::font::ScaledFont'/>
      </method>
    </implementation>

    <implementation trait='std::ops::Drop'>
      <method name='drop' foreign='cairo_scaled_font_destroy'/>
    </implementation>
  </struct>

  <struct name='Glyph'>
    <field name='index' type='c:ulong'/>
    <field name='x' type='c:f64'/>
    <field name='y' type='c:f64'/>
  </struct>

  <struct name='Cluster'>
    <field name='num_bytes' type='c:int'/>
    <field name='num_glyphs' type='c:int'/>
  </struct>

  <struct name='FontExtents'>
    <field name='ascent' type='c:f64'/>
    <field name='descent' type='c:f64'/>
    <field name='height' type='c:f64'/>
    <field name='max_x_advance' type='c:f64'/>
    <field name='max_y_advance' type='c:f64'/>
  </struct>

  <struct name='TextExtents'>
    <field name='x_bearing' type='c:f64'/>
    <field name='y_bearing' type='c:f64'/>
    <field name='width' type='c:f64'/>
    <field name='height' type='c:f64'/>
    <field name='max_x_advance' type='c:f64'/>
    <field name='max_y_advance' type='c:f64'/>
  </struct>

  <enum name='ClusterFlags' wrap='true'>
    <value name='Forwards'/>
    <value name='Backwards'/>
  </enum>

  <enum name='FontType' wrap='true'>
    <value name='Toy'/>
    <value name='FT'/>
    <value name='Win32'/>
    <value name='Quartz'/>
    <value name='User'/>
  </enum>

  <enum name='Slant' wrap='true'>
    <value name='Normal'/>
    <value name='Italic'/>
    <value name='Oblique'/>
  </enum>

  <enum name='Weight' wrap='true'>
    <value name='Normal'/>
    <value name='Bold'/>
  </enum>

  <enum name='SubpixelOrder' wrap='true'>
    <value name='Default'/>
    <value name='RGB'/>
    <value name='BGR'/>
    <value name='VRGB'/>
    <value name='VBGR'/>
  </enum>

  <enum name='HintStyle' wrap='true'>
    <value name='Default'/>
    <value name='None'/>
    <value name='Slight'/>
    <value name='Medium'/>
    <value name='Full'/>
  </enum>

  <enum name='HintMetrics' wrap='true'>
    <value name='Default'/>
    <value name='Off'/>
    <value name='On'/>
  </enum>
</mod>