<mod name='region'>
  <struct name='Region' opaque='true' prefix='cairo_region_'>
    <constructor name='create'/>

    <constructor name='create_rectangle'>
      <arg name='rectangle' type='cairo::region::Rectangle' immutable='true'/>
    </constructor>

    <constructor name='create_rectangles'>
      <arg name='rectangles' type='rsi:vec' element='cairo::region::Rectangle' immutable='true'/>
      <arg name='rectangles' type='rsi:vec-length' element='c:int'/>
    </constructor>

    <method name='status'>
      <result type='cairo::Status'/>
    </method>

    <method name='get_extents'>
      <out name='extents' type='cairo::region::Rectangle' transformer='out'/>
    </method>

    <method name='num_rectangles'>
      <result type='c:int'/>
    </method>

    <method name='get_rectangle'>
      <arg name='nth' type='c:int'/>
      <out name='rectangle' type='cairo::region::Rectangle'/>
    </method>

    <method name='is_empty'>
      <result type='cairo:bool'/>
    </method>

    <method name='contains_point'>
      <arg name='x' type='c:int'/>
      <arg name='y' type='c:int'/>
      <result type='cairo:bool'/>
    </method>

    <method name='contains_rectangle'>
      <arg name='rectangle' type='cairo::region::Rectangle' immutable='true'/>
      <result type='cairo::region::Overlap'/>
    </method>

    <method name='equal'>
      <arg name='other' type='cairo::region::Region' immutable='true'/>
      <result type='cairo:bool'/>
    </method>

    <method name='translate'>
      <arg name='dx' type='c:int'/>
      <arg name='dy' type='c:int'/>
    </method>

    <method name='intersect_rectangle'>
      <arg name='rectangle' type='cairo::region::Rectangle' immutable='true'/>
      <result type='cairo::Status'/>
    </method>

    <method name='subtract'>
      <arg name='region' type='cairo::region::Region' immutable='true'/>
      <result type='cairo::Status'/>
    </method>

    <method name='subtract_rectangle'>
      <arg name='rectangle' type='cairo::region::Rectangle' immutable='true'/>
      <result type='cairo::Status'/>
    </method>

    <method name='union'>
      <arg name='region' type='cairo::region::Region' immutable='true'/>
      <result type='cairo::Status'/>
    </method>

    <method name='union_rectangle'>
      <arg name='rectangle' type='cairo::region::Rectangle' immutable='true'/>
      <result type='cairo::Status'/>
    </method>

    <method name='xor'>
      <arg name='region' type='cairo::region::Region' immutable='true'/>
      <result type='cairo::Status'/>
    </method>

    <method name='xor_rectangle'>
      <arg name='rectangle' type='cairo::region::Rectangle' immutable='true'/>
      <result type='cairo::Status'/>
    </method>

    <implementation trait='std::clone::Clone'>
      <method name='clone' foreign='cairo_region_reference' immutable='true'>
        <result type='cairo::region::Region'/>
      </method>
    </implementation>

    <!-- TODO: Trait removed from std
    <implementation trait='std::clone::DeepClone'>
      <method name='deep_clone' foreign='cairo_region_copy' immutable='true'>
        <result type='cairo::region::Region'/>
      </method>
    </implementation>
    -->

    <implementation trait='std::ops::Drop'>
      <method name='drop' foreign='cairo_region_destroy'/>
    </implementation>
  </struct>

  <struct name='Rectangle'>
    <field name='x' type='c:int'/>
    <field name='y' type='c:int'/>
    <field name='width' type='c:int'/>
    <field name='height' type='c:int'/>
  </struct>

  <enum name='Overlap' wrap='true'>
    <value name='In'/>
    <value name='Out'/>
    <value name='Part'/>
  </enum>
</mod>