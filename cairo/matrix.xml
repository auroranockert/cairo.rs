<mod name='matrix'>
  <struct name='Matrix' prefix='cairo_matrix_'>
    <field name='xx' type='c:f64'/>
    <field name='yx' type='c:f64'/>
    <field name='xy' type='c:f64'/>
    <field name='yy' type='c:f64'/>
    <field name='x0' type='c:f64'/>
    <field name='y0' type='c:f64'/>
    
    <fn name='new' foreign='cairo_matrix_init'>
      <out name='this' type='cairo::matrix::Matrix'/>
      <arg name='xx' type='c:f64'/>
      <arg name='yx' type='c:f64'/>
      <arg name='xy' type='c:f64'/>
      <arg name='yy' type='c:f64'/>
      <arg name='x0' type='c:f64'/>
      <arg name='y0' type='c:f64'/>
    </fn>

    <fn name='identity' foreign='cairo_matrix_init_identity'>
      <out name='this' type='cairo::matrix::Matrix'/>
    </fn>

    <fn name='for_translation' foreign='cairo_matrix_init_translate'>
      <out name='this' type='cairo::matrix::Matrix'/>
      <arg name='x0' type='c:f64'/>
      <arg name='y0' type='c:f64'/>
    </fn>

    <fn name='for_scale' foreign='cairo_matrix_init_scale'>
      <out name='this' type='cairo::matrix::Matrix'/>
      <arg name='sx' type='c:f64'/>
      <arg name='sy' type='c:f64'/>
    </fn>

    <fn name='for_rotation' foreign='cairo_matrix_init_rotate'>
      <out name='this' type='cairo::matrix::Matrix'/>
      <arg name='radians' type='c:f64'/>
    </fn>

    <fn name='multiply'>
      <out name='this' type='cairo::matrix::Matrix'/>
      <arg name='a' pass_by='ref' type='cairo::matrix::Matrix'/>
      <arg name='b' pass_by='ref' type='cairo::matrix::Matrix'/>
    </fn>

    <method name='translate'>
      <arg name='x0' type='c:f64'/>
      <arg name='y0' type='c:f64'/>
    </method>

    <method name='scale'>
      <arg name='sx' type='c:f64'/>
      <arg name='sy' type='c:f64'/>
    </method>

    <method name='rotate'>
      <arg name='radians' type='c:f64'/>
    </method>

    <method name='transform_distance' immutable='true'>
      <out name='dx' type='c:f64'/>
      <out name='dy' type='c:f64'/>
    </fn>

    <method name='transform_point' immutable='true'>
      <out name='x' type='c:f64'/>
      <out name='y' type='c:f64'/>
    </method>

    <method name='invert'>
      <result type='cairo::Status'/>
    </method>
  </struct>
</mod>